// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Brand {
  id      Int       @id @default(autoincrement())
  name    String
  product Product[]
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String
  product Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  photo       String?
  description String?
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  categoryId  Int
  brandId     Int
  category    Category @relation(fields: [categoryId], references: [id])
  brand       Brand    @relation(fields: [brandId], references: [id])
  orders      Order[]
  stock       Stock?
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  cpf       String   @unique
  email     String   @unique
  password  String
  role      Role     @default(CUSTOMER)
  phone     String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sale      Sale[]
}

model Sale {
  id        Int      @id @default(autoincrement())
  userId    Int
  createdAt DateTime @default(now())
  status    String
  value     Float
  user      User     @relation(fields: [userId], references: [id])
  order     Order[]
}

model Order {
  id        Int     @id @default(autoincrement())
  saleId    Int
  productId Int
  quantity  Int
  priceUnit Float
  sale      Sale    @relation(fields: [saleId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Stock {
  productId Int      @id
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
}

enum Role {
  ADMIN
  CUSTOMER
}
